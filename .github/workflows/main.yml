# This is a basic workflow to help you get started with Actions

name: Build executables

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install Deno
        run: curl -fsSL https://deno.land/x/install/install.sh | sh
        
      # Compile
      - name: Compile Linux
        run: /home/runner/.deno/bin/deno compile --allow-all --unstable --target x86_64-unknown-linux-gnu main.ts
      
      - name: Rename
        run: mv bacon bacon-linux

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: bacon-linux
        
      - name: Upload
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'bacon-linux'
          path: bacon-linux
        
      - name: Compile MacOS
        run: /home/runner/.deno/bin/deno compile --allow-all --unstable --target aarch64-apple-darwin main.ts

      - name: Rename
        run: mv bacon bacon-macos
        
      # - name: Compress binary
      #   uses: svenstaro/upx-action@v2
      #   with:
      #     file: bacon-macos
        
      - name: Upload
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'bacon-macos'
          path: bacon-macos
        
      - name: Compile Windows
        run: /home/runner/.deno/bin/deno compile --allow-all --unstable --target x86_64-pc-windows-msvc main.ts
        
      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: bacon.exe
        
      - name: Upload
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'bacon.exe'
          path: bacon.exe

      - name: Folderize
        run: mkdir release && mv bacon.exe release && mv bacon-macos release && mv bacon-linux release

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y.%m.%d')"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.date.outputs.date}}
          release_name: ${{steps.date.outputs.date}}
          body: |
            This release is created automatically.
          draft: false
          prerelease: false

      - name: Upload release assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: release

